#include<stdio.h>
#define N 100010
int e[N], ne[N], head,i;
void init()
{
	head = -1;
	i = 0;
}
void head_insert(int x)
{
	e[i] = x;
	ne[i] = head;
	head = i++;
}
void insert(int k, int x)
{
	e[i] = x;
	ne[i] = ne[k];
	ne[k] = i++;
}
void remove(int k)
{
	ne[k] = ne[ne[k]];
}

int main()
{
	int M;
	scanf("%d", &M);
	init();
	int T = 0;
	while (M--)
	{
		getchar();
		char a; scanf("%c", &a);
		if (a == 'H')
		{
			int x; scanf("%d", &x);
			head_insert(x);
			T++;
		}
		else if (a == 'I')
		{
			int k, x;
			scanf("%d%d", &k, &x);
			insert(k-1, x);
			T++;
		}
		else if (a == 'D')
		{
			int  k;
			scanf("%d", &k);
			if (!k)
				head = ne[head];
			else
				remove(k-1);
			T--;
		}
	}
	for (int t = head; t!=-1; t=ne[t])
		printf("%d ",e[t]);
	return 0;
}


#include<stdio.h>
int s[10010] = { 0 }; int a[10010] = { 0 };
int max(int a, int b)
{
	if (a > b)
		return a;
	return b;
}

int main()
{
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) scanf("%d", &a[i]);

	int res = 0;
	for (int i = 0, j = 0, k = 0; i < n; i++)
	{
		s[a[i]]++;
		while (s[a[i]] > 1)
		{
			s[a[j]]--;
			j++;
		}
		res = max(res, i - j+1);
	}
	printf("%d", res);
	return 0;
}



#include<stdio.h>
int s[10010] = { 0 }; int a[10010] = { 0 };
int main()
{
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) scanf("%d", &a[i]);

	int res = 0;
	for (int i = 0, j = 0,k=0; i < n; i++)
	{
		s[a[i]]++;
		if (s[a[i]] > 1)
		{
			 s[a[i]]--;
			j = i;
			k = j;
		}
		res = res > (i - k + 1) ? res : (i - k + 1);
	}
	printf("%d", res);
	return 0;
}
//
//#include<stdio.h>
//
//#define N  20
//char g[N][N];
//int row[N], dg[N], udg[N], n;
//void My_DFS(int u)
//{
//	if (u > n)
//	{
//		for (int i = 1; i <= n; i++)
//		{
//			for (int j = 1; j <= n; j++)
//				printf("%c", g[i][j]);
//			printf("\n");
//		}
//		printf("\n");
//		return;
//	}
//	for (int i = 1; i <= n; i++)
//	{
//		if (!row[i] && !dg[u + i] && !udg[n - u + i])
//		{
//			g[u][i] = 'Q';
//			row[i] = dg[u + i] = udg[n - u + i] = 1;
//			My_DFS(u + 1);
//			row[i] = dg[u + i] = udg[n - u + i] = 0;
//			g[u][i]='.';
//		}
//	}
//}
//int main()
//{
//	scanf("%d", &n);
//	for (int i = 1; i <= n; i++)
//		for (int j = 1; j <= n; j++)
//			g[i][j] = '.';
//	My_DFS(1);
//	return 0;
//}

//#include<string.h>
//#include<stdio.h>
//
//#define N 105
//int q[N][N], d[N][N],mk[N*N][2];
//int m, n; int btx[N], bty[N];
//
//void bfs()
//{
//	int hh = 0, tt = 0;
//	int dx[4] = { -1,0,1,0 }; int dy[4] = { 0,1,0,-1 };
//	d[0][0] = 0;
//	while (hh <= tt)
//	{
//		for (int i = 3; i>=0; i--)
//		{
//			int x = dx[i] + mk[hh][0], y = dy[i] + mk[hh][1];
//			if (x >= 0 && x < n && y >= 0 && y < m && d[x][y] == -1 && q[x][y] == 0)
//			{
//				d[x][y] = d[mk[hh][0]][mk[hh][1]] + 1;
//				mk[++tt][0] = x; mk[tt][1] = y;
//			}
//		}
//		hh++;
//	}
//	printf("%d", d[n - 1][m - 1]);
//}
//int main()
//{
//	memset(d, -1, sizeof d);
//	scanf("%d%d", &n, &m);
//	for (int i = 0; i < n; i++)
//		for (int j = 0; j < m; j++)
//			scanf("%d", &q[i][j]);
//	bfs();
//	return 0;
//}


//#include <stdio.h>
//#include <stdlib.h>
//int a[1000000], b[1000000], c[2000000];
//int main()
//{
//	int m, n, i, j, k = 0;
//	scanf("%d", &m);
//	for (i = 0; i < m; i++)
//		scanf("%d", &a[i]);
//	scanf("%d", &n);
//	for (j = 0; j < n; j++)
//		scanf("%d", &b[j]);
//	i = m - 1, k = 0, j = 0;
//	while (i >= 0||j < n)
//	{
//		if (a[i] >= b[j])
//			c[k++] = a[i--];
//		else
//			c[k++] = b[j++];
//	}
//	while (i>=0)
//		c[k++] = a[i--];
//	while (j < n )
//		c[k++] = b[j++];
//	for (i = 0; i < k; i++)
//		printf("%d", c[i]);
//	return 0;
//}
#include<stdio.h>
char a[10010], b[10010];
int c[10010];
void strrev1(char *h)
{
	int i = 0;
	int j = strlen(h) - 1;
	while (i < j)
	{
		char tem = *(h + i);
		*(h + i) = *(h + j);
		*(h + j) = tem;
		i++, j--;
	}

}
int main()
{
	scanf("%s%s", a, b);
	int len1 = strlen(a), len2 = strlen(b);
	for (; a[len1-1] == '0'; )
	{
		a[len1-1] = 0;
		len1--;
	}
	for (; b[len2 - 1] == '0'; )
	{
		b[len2 - 1] = 0;
		len2--;
	}
	if (len1 < len2)
	{
		char tem[100010];
		strcpy(tem, a);
		strcpy(a, b);
		strcpy(b, tem);
		printf("-");
	}
	else if (len1 == len2)
	{
		if(strcmp(a,b)<0)
		{
			char tem[100010];
			strcpy(tem, a);
			strcpy(a, b);
			strcpy(b, tem);
			printf("-");
		}
		else if (strcmp(a, b) == 0)
		{
			printf("0");
			return 0;
		}
	}
	strrev1(a), strrev1(b);
	for (int i = 0; i < len1; i++)a[i] -= '0';
		
	for (int i = 0; i < len2; i++)b[i] -= '0';
		
	for (int i = 0, t = 0; i < len1; i++)
	{
		a[i] -= t;
		t = 0;
		if (a[i] >= b[i])
			c[i] = a[i] - b[i];
		else
		{
			c[i] = 10 + a[i] - b[i];
			t = 1;
		}
	}
	for (int i = len1 - 1, flag = 0; i >= 0; i--)
	{
		if (c[i] == 0 && flag == 0)
			continue;
		else
		{
			printf("%d", c[i]);
			flag = 1;
		}
	}
	return 0;
}

